{
	"_method_": {},
	"cs.FileTransfer": {
		"SystemWorkerProperties": {
			"new()": {
				"Syntax": "**.new**( *type* : Text; *data* : Object; *callback* : 4D.Function; *callbackID* : Text; *stopButton* : Object )",
				"Params": [
					[
						"type",
						"Text",
						"->"
					],
					[
						"data",
						"Object",
						"->"
					],
					[
						"callback",
						"4D.Function",
						"->"
					],
					[
						"callbackID",
						"Text",
						"->"
					],
					[
						"stopButton",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"FileTransfer_rclone": {
			"new()": {
				"Syntax": "**.new**( *configname* : Text )",
				"Params": [
					[
						"configname",
						"Text",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"FileTransfer_curl": {
			"new()": {
				"Syntax": "**.new**( *hostname* : Text; *username* : Text; *password* : Text; *protocol* : Text )",
				"Params": [
					[
						"hostname",
						"Text",
						"->"
					],
					[
						"username",
						"Text",
						"->"
					],
					[
						"password",
						"Text",
						"->"
					],
					[
						"protocol",
						"Text",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"FileTransfer_Dropbox": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"FileTransfer_GDrive": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"_Build": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		}
	},
	"SystemWorkerProperties": {
		"onTerminate()": {
			"Syntax": "**.onTerminate**( *systemworker* : Object; *data* : Object )",
			"Params": [
				[
					"systemworker",
					"Object",
					"->"
				],
				[
					"data",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"onDataError()": {
			"Syntax": "**.onDataError**( *systemworker* : Object; *data* : Object )",
			"Params": [
				[
					"systemworker",
					"Object",
					"->"
				],
				[
					"data",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"onData()": {
			"Syntax": "**.onData**( *systemworker* : Object; *data* : Object )",
			"Params": [
				[
					"systemworker",
					"Object",
					"->"
				],
				[
					"data",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"SharedForProgressBar": {
			"Syntax": "SharedForProgressBar : Object"
		},
		"stopbutton": {
			"Syntax": "stopbutton : Object"
		},
		"data": {
			"Syntax": "data : Object"
		},
		"hideWindow": {
			"Syntax": "hideWindow : Boolean"
		},
		"callback": {
			"Syntax": "callback : 4D.Function"
		},
		"dataType": {
			"Syntax": "dataType : Text"
		},
		"encoding": {
			"Syntax": "encoding : Text"
		},
		"callbackID": {
			"Syntax": "callbackID : Text"
		},
		"type": {
			"Syntax": "type : Text"
		}
	},
	"FileTransfer_rclone": {
		"wait()": {
			"Syntax": "**.wait**( *max* : Integer )",
			"Params": [
				[
					"max",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"status()": {
			"Syntax": "**.status**()->status : Object",
			"Params": [
				[
					"status",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"syncUp()": {
			"Syntax": "**.syncUp**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"createDirectory()": {
			"Syntax": "**.createDirectory**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"stop()": {
			"Syntax": "**.stop**()",
			"Params": [],
			"Summary": ""
		},
		"version()": {
			"Syntax": "**.version**()->data : Object",
			"Params": [
				[
					"data",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"enableStopButton()": {
			"Syntax": "**.enableStopButton**( *enable* : Object )",
			"Params": [
				[
					"enable",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"setAsyncMode()": {
			"Syntax": "**.setAsyncMode**( *async* : Boolean )",
			"Params": [
				[
					"async",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"useCallback()": {
			"Syntax": "**.useCallback**( *callback* : 4D.Function; *ID* : Text )",
			"Params": [
				[
					"callback",
					"4D.Function",
					"->"
				],
				[
					"ID",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"setPrefix()": {
			"Syntax": "**.setPrefix**( *prefix* : Text )",
			"Params": [
				[
					"prefix",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"setPath()": {
			"Syntax": "**.setPath**( *path* : Text )",
			"Params": [
				[
					"path",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"setMaxTime()": {
			"Syntax": "**.setMaxTime**( *seconds* : Real )",
			"Params": [
				[
					"seconds",
					"Real",
					"->"
				]
			],
			"Summary": ""
		},
		"validate()": {
			"Syntax": "**.validate**()->success : Object",
			"Params": [
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"executeCommand()": {
			"Syntax": "**.executeCommand**( *command* : Text )->success : Object",
			"Params": [
				[
					"command",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"copyFile()": {
			"Syntax": "**.copyFile**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"deleteDirectory()": {
			"Syntax": "**.deleteDirectory**( *targetpath* : Text; *force* : Boolean )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"force",
					"Boolean",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"moveFile()": {
			"Syntax": "**.moveFile**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"obscure()": {
			"Syntax": "**.obscure**( *password* : Text )->obscured : Text",
			"Params": [
				[
					"password",
					"Text",
					"->"
				],
				[
					"obscured",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"deleteFile()": {
			"Syntax": "**.deleteFile**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"download()": {
			"Syntax": "**.download**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"renameFile()": {
			"Syntax": "**.renameFile**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"syncDown()": {
			"Syntax": "**.syncDown**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"upload()": {
			"Syntax": "**.upload**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"setTimeout()": {
			"Syntax": "**.setTimeout**( *timeout* : Integer )",
			"Params": [
				[
					"timeout",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"getDirectoryListing()": {
			"Syntax": "**.getDirectoryListing**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"FileTransfer_curl": {
		"wait()": {
			"Syntax": "**.wait**( *max* : Integer )",
			"Params": [
				[
					"max",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"status()": {
			"Syntax": "**.status**()->status : Object",
			"Params": [
				[
					"status",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"executeCommand()": {
			"Syntax": "**.executeCommand**( *command* : Text ) : Object",
			"Params": [
				[
					"command",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"deleteFile()": {
			"Syntax": "**.deleteFile**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"download()": {
			"Syntax": "**.download**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"upload()": {
			"Syntax": "**.upload**( *sourcepath* : Text; *targetpath* : Text; *append* : Boolean )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"append",
					"Boolean",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"useCallback()": {
			"Syntax": "**.useCallback**( *callback* : 4D.Function; *ID* : Text )",
			"Params": [
				[
					"callback",
					"4D.Function",
					"->"
				],
				[
					"ID",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"version()": {
			"Syntax": "**.version**()->data : Object",
			"Params": [
				[
					"data",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"setRange()": {
			"Syntax": "**.setRange**( *range* : Text )",
			"Params": [
				[
					"range",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"enableStopButton()": {
			"Syntax": "**.enableStopButton**( *enable* : Object )",
			"Params": [
				[
					"enable",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"renameFile()": {
			"Syntax": "**.renameFile**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"enableProgressData()": {
			"Syntax": "**.enableProgressData**( *enable* : Boolean )",
			"Params": [
				[
					"enable",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"setPath()": {
			"Syntax": "**.setPath**( *path* : Text )",
			"Params": [
				[
					"path",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"setActiveMode()": {
			"Syntax": "**.setActiveMode**( *active* : Boolean; *IP* : Text )",
			"Params": [
				[
					"active",
					"Boolean",
					"->"
				],
				[
					"IP",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"getDirectoryListing()": {
			"Syntax": "**.getDirectoryListing**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"setAutoCreateLocalDirectory()": {
			"Syntax": "**.setAutoCreateLocalDirectory**( *auto* : Boolean )",
			"Params": [
				[
					"auto",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"setTimeout()": {
			"Syntax": "**.setTimeout**( *timeout* : Integer )",
			"Params": [
				[
					"timeout",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"setAsyncMode()": {
			"Syntax": "**.setAsyncMode**( *async* : Boolean )",
			"Params": [
				[
					"async",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"deleteDirectory()": {
			"Syntax": "**.deleteDirectory**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"setCurlPrefix()": {
			"Syntax": "**.setCurlPrefix**( *prefix* : Text )",
			"Params": [
				[
					"prefix",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"setMaxTime()": {
			"Syntax": "**.setMaxTime**( *seconds* : Real )",
			"Params": [
				[
					"seconds",
					"Real",
					"->"
				]
			],
			"Summary": ""
		},
		"validate()": {
			"Syntax": "**.validate**()->success : Object",
			"Params": [
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"setConnectTimeout()": {
			"Syntax": "**.setConnectTimeout**( *seconds* : Real )",
			"Params": [
				[
					"seconds",
					"Real",
					"->"
				]
			],
			"Summary": ""
		},
		"stop()": {
			"Syntax": "**.stop**()",
			"Params": [],
			"Summary": ""
		},
		"createDirectory()": {
			"Syntax": "**.createDirectory**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"setAutoCreateRemoteDirectory()": {
			"Syntax": "**.setAutoCreateRemoteDirectory**( *auto* : Boolean )",
			"Params": [
				[
					"auto",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"onData": {
			"Syntax": "onData : Object"
		}
	},
	"FileTransfer_Dropbox": {
		"status()": {
			"Syntax": "**.status**()->status : Object",
			"Params": [
				[
					"status",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"stop()": {
			"Syntax": "**.stop**()",
			"Params": [],
			"Summary": ""
		},
		"enableStopButton()": {
			"Syntax": "**.enableStopButton**( *enable* : Object )",
			"Params": [
				[
					"enable",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"setAsyncMode()": {
			"Syntax": "**.setAsyncMode**( *async* : Boolean )",
			"Params": [
				[
					"async",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"useCallback()": {
			"Syntax": "**.useCallback**( *callback* : 4D.Function; *ID* : Text )",
			"Params": [
				[
					"callback",
					"4D.Function",
					"->"
				],
				[
					"ID",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"setPath()": {
			"Syntax": "**.setPath**( *path* : Text )",
			"Params": [
				[
					"path",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"deleteDirectory()": {
			"Syntax": "**.deleteDirectory**( *targetpath* : Text; *force* : Boolean ) : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"force",
					"Boolean",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"version()": {
			"Syntax": "**.version**()->data : Object",
			"Params": [
				[
					"data",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"moveFile()": {
			"Syntax": "**.moveFile**( *sourcepath* : Text; *targetpath* : Text ) : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"renameFile()": {
			"Syntax": "**.renameFile**( *sourcepath* : Text; *targetpath* : Text ) : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"createDirectory()": {
			"Syntax": "**.createDirectory**( *targetpath* : Text ) : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"copyFile()": {
			"Syntax": "**.copyFile**( *sourcepath* : Text; *targetpath* : Text ) : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"download()": {
			"Syntax": "**.download**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"executeCommand()": {
			"Syntax": "**.executeCommand**( *command* : Text )->success : Object",
			"Params": [
				[
					"command",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"deleteFile()": {
			"Syntax": "**.deleteFile**( *targetpath* : Text ) : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"upload()": {
			"Syntax": "**.upload**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"wait()": {
			"Syntax": "**.wait**( *max* : Integer )",
			"Params": [
				[
					"max",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"setTimeout()": {
			"Syntax": "**.setTimeout**( *timeout* : Integer )",
			"Params": [
				[
					"timeout",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"getDirectoryListing()": {
			"Syntax": "**.getDirectoryListing**( *targetpath* : Text )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"onData": {
			"Syntax": "onData : Object"
		}
	},
	"FileTransfer_GDrive": {
		"status()": {
			"Syntax": "**.status**()->status : Object",
			"Params": [
				[
					"status",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"createDirectory()": {
			"Syntax": "**.createDirectory**( *targetpath* : Text ) : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"stop()": {
			"Syntax": "**.stop**()",
			"Params": [],
			"Summary": ""
		},
		"useCallback()": {
			"Syntax": "**.useCallback**( *callback* : 4D.Function; *ID* : Text )",
			"Params": [
				[
					"callback",
					"4D.Function",
					"->"
				],
				[
					"ID",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"setPath()": {
			"Syntax": "**.setPath**( *path* : Text )",
			"Params": [
				[
					"path",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"executeCommand()": {
			"Syntax": "**.executeCommand**( *command* : Text )->success : Object",
			"Params": [
				[
					"command",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"enableStopButton()": {
			"Syntax": "**.enableStopButton**( *enable* : Object )",
			"Params": [
				[
					"enable",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"version()": {
			"Syntax": "**.version**()->data : Object",
			"Params": [
				[
					"data",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"moveFile()": {
			"Syntax": "**.moveFile**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"deleteDirectory()": {
			"Syntax": "**.deleteDirectory**( *targetpath* : Text; *force* : Boolean ) : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"force",
					"Boolean",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"copyFile()": {
			"Syntax": "**.copyFile**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"setAsyncMode()": {
			"Syntax": "**.setAsyncMode**( *async* : Boolean )",
			"Params": [
				[
					"async",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"renameFile()": {
			"Syntax": "**.renameFile**( *sourcepath* : Text; *targetpath* : Text ) : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"export()": {
			"Syntax": "**.export**( *sourcepath* : Text; *targetpath* : Text; *sourceID* : Text; *mime* : Text ) : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"sourceID",
					"Text",
					"->"
				],
				[
					"mime",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"download()": {
			"Syntax": "**.download**( *sourcepath* : Text; *targetpath* : Text; *sourceID* : Text; *sourceQuery* : Text ) : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"sourceID",
					"Text",
					"->"
				],
				[
					"sourceQuery",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"deleteFile()": {
			"Syntax": "**.deleteFile**( *targetpath* : Text ) : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"getDirectoryListing()": {
			"Syntax": "**.getDirectoryListing**( *targetpath* : Text; *ID* : Text; *max* : Integer )->success : Object",
			"Params": [
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"ID",
					"Text",
					"->"
				],
				[
					"max",
					"Integer",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"import()": {
			"Syntax": "**.import**( *sourcepath* : Text; *targetpath* : Text; *mime* : Text ) : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"mime",
					"Text",
					"->"
				],
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"upload()": {
			"Syntax": "**.upload**( *sourcepath* : Text; *targetpath* : Text )->success : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"success",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"wait()": {
			"Syntax": "**.wait**( *max* : Integer )",
			"Params": [
				[
					"max",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"setTimeout()": {
			"Syntax": "**.setTimeout**( *timeout* : Integer )",
			"Params": [
				[
					"timeout",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"onData": {
			"Syntax": "onData : Object"
		}
	},
	"_Build": {
		"Notarize()": {
			"Syntax": "**.Notarize**( *zipfilepath* : Text )->error : Object",
			"Params": [
				[
					"zipfilepath",
					"Text",
					"->"
				],
				[
					"error",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"Staple()": {
			"Syntax": "**.Staple**()->error : Object",
			"Params": [
				[
					"error",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"Build()": {
			"Syntax": "**.Build**( *PathToSettings* : Text )->error : Object",
			"Params": [
				[
					"PathToSettings",
					"Text",
					"->"
				],
				[
					"error",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"Zip()": {
			"Syntax": "**.Zip**( *sourcepath* : Text; *targetpath* : Text )->error : Object",
			"Params": [
				[
					"sourcepath",
					"Text",
					"->"
				],
				[
					"targetpath",
					"Text",
					"->"
				],
				[
					"error",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"Compile()": {
			"Syntax": "**.Compile**( *options* : Object )->error : Object",
			"Params": [
				[
					"options",
					"Object",
					"->"
				],
				[
					"error",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		}
	}
}